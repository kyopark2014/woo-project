이제 파일 내용을 분석하여 "정산예정금액 계산 input 조회 API"에 대한 테스트 케이스를 작성하겠습니다.

# 정산예정금액 계산 input 조회 API 테스트 케이스

## 개요
- **API 명칭**: 정산예정금액 계산 input 조회 API
- **담당 팀**: 결제허브팀
- **API 문서**: [푸드 정산예정금액](https://paytrack-report-api.betawoowa.in/docs/index.html#_%ED%91%B8%EB%93%9C_%EC%A0%95%EC%82%B0%EC%98%88%EC%A0%95%EA%B8%88%EC%95%A1_%EC%A1%B0%ED%9A%8C_api)
- **관련 기획 문서**: [PJ] 202503 - HVA/MFO 배달팁 할인 금액 연동

## 테스트 케이스

### TC-01: 기본 파라미터 검증
**목적**: API 호출 시 필수 파라미터 검증
1. **테스트 단계**:
   - 필수 파라미터 없이 API 호출
   - 일부 필수 파라미터만 포함하여 API 호출
   - 모든 필수 파라미터를 포함하여 API 호출
2. **예상 결과**:
   - 필수 파라미터 누락 시 적절한 에러 메시지 반환
   - 모든 필수 파라미터 포함 시 정상 응답

### TC-02: 할인 없는 주문의 정산예정금액 계산
**목적**: 할인이 없는 일반 주문에 대한 정산예정금액 계산 검증
1. **테스트 데이터**:
   - serviceTxNo: 실제 주문번호
   - txDate: 2024-10-22
   - amountType: PLUS
2. **예상 결과**:
   - 응답에 txResultAmount가 정확히 계산되어 반환됨
   - 주문금액 10,000원, 가게배달팁 3,000원인 경우 정산예정금액은 12,571원
   - baroWoowabrosChargeDelivertyTip 값은 0

### TC-03: 배민 부담 가게배달팁이 있는 주문의 정산예정금액 계산
**목적**: HVA 배달팁 할인이 적용된 주문에 대한 정산예정금액 계산 검증
1. **테스트 데이터**:
   - serviceTxNo: 실제 주문번호
   - txDate: 2024-10-22
   - amountType: PLUS
2. **예상 결과**:
   - 응답에 txResultAmount가 정확히 계산되어 반환됨
   - 주문금액 10,000원, 배민 부담 가게배달팁 3,000원인 경우 정산예정금액은 12,571원
   - baroWoowabrosChargeDelivertyTip 값은 3,000

### TC-04: 취소 주문의 정산예정금액 계산
**목적**: 취소된 주문에 대한 정산예정금액 계산 검증
1. **테스트 데이터**:
   - serviceTxNo: 실제 주문번호
   - txDate: 2024-10-22
   - amountType: MINUS
2. **예상 결과**:
   - 응답에 txResultAmount가 음수로 정확히 계산되어 반환됨
   - 배민 부담 가게배달팁이 있는 주문이 취소된 경우 정산예정금액은 -12,571원
   - baroWoowabrosChargeDelivertyTip 값은 -3,000 또는 3,000(취소 표시)

### TC-05: 부분 취소 주문의 정산예정금액 계산
**목적**: 부분 취소된 주문에 대한 정산예정금액 계산 검증
1. **테스트 데이터**:
   - serviceTxNo: 실제 주문번호
   - txDate: 2024-10-22
   - amountType: PARTIAL_MINUS
   - billingCancelTradeNo: 실제 부분취소번호
   - billingServiceCancelNo: 실제 빌링취소번호
2. **예상 결과**:
   - 응답에 txResultAmount가 부분 취소 금액에 맞게 계산되어 반환됨
   - 예: 50% 부분 취소 시 정산예정금액은 -6,285원
   - baroWoowabrosChargeDelivertyTip 값이 부분 취소 비율에 맞게 계산됨

### TC-06: 정산시스템에 데이터가 존재하는 경우의 계산 검증
**목적**: 정산시스템에 이미 데이터가 존재하는 경우의 정산예정금액 계산 검증
1. **테스트 데이터**:
   - 정산시스템에 데이터가 존재하는 주문번호 사용
2. **예상 결과**:
   - 배달의민족 서비스 유형인 경우:
     - 정산예정금액 = 정산 내 tx_item.txResultAmount - 정산어드민 > 광고관리 > 광고상세내역 내 중개이용료 - 부가세
   - 배민1 서비스 유형인 경우:
     - 정산예정금액 = 정산 내 tx_item.txResultAmount

### TC-07: 정산기준금액(baseAmount) 계산 검증
**목적**: 정산기준금액 계산 로직 검증
1. **테스트 데이터**:
   - 다양한 주문 케이스(할인 없음, 배민 부담 가게배달팁 있음)
2. **예상 결과**:
   - 정산기준금액 = 결제금액 - 우형매출(고객부담배달팁) - 사장님부담쿠폰금액 + 메뉴할인지원금액 + 배민 부담 가게배달팁
   - 할인 없는 경우: 13,000원 (주문금액 10,000원 + 가게배달팁 3,000원)
   - 배민 부담 가게배달팁 있는 경우: 13,000원 (주문금액 10,000원 + 배민 부담 가게배달팁 3,000원)

### TC-08: 결제정산수수료 계산 검증
**목적**: 결제정산수수료 계산 로직 검증
1. **테스트 데이터**:
   - 다양한 주문 케이스
2. **예상 결과**:
   - 결제정산수수료_공급가액 = 변동수수료 + 고정수수료 + 우대수수료
   - 결제정산수수료_부가세 = 결제정산수수료_공급가액 * 10%
   - 예상 결과값과 실제 계산값 비교

### TC-09: 중개이용료 계산 검증
**목적**: 중개이용료 계산 로직 검증
1. **테스트 데이터**:
   - 다양한 주문 케이스
2. **예상 결과**:
   - 광고기준금액 = 결제금액 - 우형매출(고객부담배달팁) - 사장님부담쿠폰금액 + 메뉴할인지원금액 - 가게배달팁 - 일회용컵보증금
   - 중개이용료_공급가액 = 변동수수료 + 고정수수료
   - 중개이용료_부가세 = 중개이용료_공급가액 * 10%
   - 예상 결과값과 실제 계산값 비교

### TC-10: 배민 부담 가게배달팁 필드 검증
**목적**: 새로 추가된 baroWoowabrosChargeDelivertyTip 필드 검증
1. **테스트 데이터**:
   - 배민 부담 가게배달팁이 있는 주문
   - 배민 부담 가게배달팁이 없는 주문
2. **예상 결과**:
   - 배민 부담 가게배달팁이 있는 경우 baroWoowabrosChargeDelivertyTip 값은 3,000
   - 배민 부담 가게배달팁이 없는 경우 baroWoowabrosChargeDelivertyTip 값은 0

### TC-11: 다양한 금액 조합에 대한 정산예정금액 계산
**목적**: 다양한 금액 조합에 대한 정산예정금액 계산 검증
1. **테스트 데이터**:
   - 주문금액, 가게배달팁, 배민 부담 가게배달팁 등의 다양한 조합
2. **예상 결과**:
   - 각 조합에 따른 정산예정금액이 정확히 계산됨

### TC-12: 에러 케이스 처리 검증
**목적**: API 에러 처리 검증
1. **테스트 데이터**:
   - 존재하지 않는 주문번호
   - 잘못된 날짜 형식
   - 지원하지 않는 amountType
2. **예상 결과**:
   - 적절한 에러 코드와 메시지 반환
   - 클라이언트가 이해할 수 있는 명확한 에러 메시지 제공

## 결론
위 테스트 케이스들은 "정산예정금액 계산 input 조회 API"의 기능을 검증하기 위한 것입니다. 특히 새로 추가된 "배민 부담 가게배달팁" 필드와 관련된 계산 로직이 정확히 작동하는지 확인하는 데 중점을 두었습니다. 테스트를 통해 다양한 주문 상황에서 정산예정금액이 올바르게 계산되는지 검증할 수 있습니다.
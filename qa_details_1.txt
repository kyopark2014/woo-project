이제 파일 내용을 확인했으니, 요청하신 QA 항목에 대한 테스트 케이스를 작성하겠습니다.

# 테스트 케이스: 거래 조회 (부분환불) V2 (공통API)

## 개요
- **End Point**: /common-api/v2/customers/{customerNo}/manual-tx-histories
- **기능**: 거래처번호에 따른 부분환불 거래 내역 조회
- **작업사항**: 정산기준조정금액에 '배민 부담 가게배달팁' 코드 추가 (실제 운영상 데이터 발생X)

## 테스트 케이스

### 테스트 케이스 1: 기본 API 호출 검증
**목적**: API 호출이 정상적으로 작동하는지 확인
- **입력**:
  - Path Parameter: customerNo = 유효한 거래처번호
  - Request Parameter: txDate = 현재 날짜
- **예상 결과**: 
  - HTTP 상태 코드 200 OK
  - 응답 데이터가 정의된 형식에 맞게 반환됨

### 테스트 케이스 2: 정산기준조정금액 필드 구조 검증
**목적**: 응답에 정산기준조정금액 필드가 올바르게 포함되어 있는지 확인
- **입력**:
  - Path Parameter: customerNo = 유효한 거래처번호
  - Request Parameter: txDate = 유효한 거래일자
- **예상 결과**: 
  - 응답의 content[].adjustAmounts 배열이 존재함
  - adjustAmounts 배열에 code, amount, supplyAmount, vat 필드가 포함됨

### 테스트 케이스 3: '배민 부담 가게배달팁' 코드 추가 검증
**목적**: '배민 부담 가게배달팁' 코드가 정산기준조정금액에 추가되었는지 확인
- **입력**:
  - Path Parameter: customerNo = 유효한 거래처번호
  - Request Parameter: txDate = 유효한 거래일자
- **예상 결과**: 
  - adjustAmounts 배열에 code가 'BARO_WOOWABROS_CHARGE_DELIVERY_TIP'인 항목이 존재할 수 있음
  - 해당 코드의 name이 '배민 부담 가게배달팁'으로 표시됨

### 테스트 케이스 4: 부분환불 거래 내역 필터링 검증
**목적**: 부분환불 거래 내역만 올바르게 필터링되는지 확인
- **입력**:
  - Path Parameter: customerNo = 유효한 거래처번호
  - Request Parameter: txDate = 유효한 거래일자
- **예상 결과**: 
  - 응답의 모든 content[].settleAmountType 값이 'PARTIAL_REFUND'임
  - billingCancelTradeNo 필드가 null이 아님

### 테스트 케이스 5: 페이지네이션 검증
**목적**: 페이지네이션이 올바르게 작동하는지 확인
- **입력**:
  - Path Parameter: customerNo = 유효한 거래처번호
  - Request Parameter: 
    - txDate = 유효한 거래일자
    - page = 0
    - size = 10
- **예상 결과**: 
  - 응답에 totalPages, totalElements, page, size 필드가 포함됨
  - content 배열의 크기가 size 파라미터 값 이하임

### 테스트 케이스 6: 특정 가게번호 필터링 검증
**목적**: 특정 가게번호로 필터링이 올바르게 작동하는지 확인
- **입력**:
  - Path Parameter: customerNo = 유효한 거래처번호
  - Request Parameter: 
    - txDate = 유효한 거래일자
    - subKey = 유효한 가게번호
- **예상 결과**: 
  - 응답의 모든 content[].subKey 값이 요청한 subKey와 일치함

### 테스트 케이스 7: 데이터 없는 경우 검증
**목적**: 데이터가 없는 경우 응답이 올바르게 처리되는지 확인
- **입력**:
  - Path Parameter: customerNo = 유효한 거래처번호
  - Request Parameter: txDate = 데이터가 없는 날짜
- **예상 결과**: 
  - HTTP 상태 코드 200 OK
  - content 배열이 비어있음
  - totalElements가 0임

### 테스트 케이스 8: 인증 실패 검증
**목적**: 인증 정보가 없거나 잘못된 경우 응답이 올바르게 처리되는지 확인
- **입력**:
  - Path Parameter: customerNo = 유효한 거래처번호
  - Request Parameter: txDate = 유효한 거래일자
  - Authorization 헤더 없음 또는 잘못된 값
- **예상 결과**: 
  - 적절한 인증 오류 응답 (예: HTTP 상태 코드 401 Unauthorized)

### 테스트 케이스 9: 잘못된 거래처번호 검증
**목적**: 잘못된 거래처번호로 요청 시 응답이 올바르게 처리되는지 확인
- **입력**:
  - Path Parameter: customerNo = 존재하지 않는 거래처번호
  - Request Parameter: txDate = 유효한 거래일자
- **예상 결과**: 
  - 적절한 오류 응답 (예: HTTP 상태 코드 404 Not Found)

### 테스트 케이스 10: 필수 파라미터 누락 검증
**목적**: 필수 파라미터가 누락된 경우 응답이 올바르게 처리되는지 확인
- **입력**:
  - Path Parameter: customerNo = 유효한 거래처번호
  - Request Parameter: txDate 파라미터 누락
- **예상 결과**: 
  - 적절한 오류 응답 (예: HTTP 상태 코드 400 Bad Request)
  - 오류 메시지에 누락된 파라미터 정보가 포함됨

## 참고사항
- 문서에 따르면 부분환불은 주문금액을 기준으로 발생하므로, 실제 운영상 '배민 부담 가게배달팁' 데이터는 발생하지 않을 것으로 예상됩니다.
- 그러나 API는 해당 코드를 지원해야 하므로, 코드가 올바르게 추가되었는지 검증하는 것이 중요합니다.
- 테스트 시 실제 데이터가 없더라도 API 응답 구조와 필드가 올바르게 정의되었는지 확인해야 합니다.
이제 정산예정금액 계산API에 대한 테스트 케이스를 작성하겠습니다. 문서를 통해 확인한 내용을 바탕으로 다양한 시나리오를 고려하여 테스트 케이스를 구성하겠습니다.

# 정산예정금액 계산API 테스트 케이스

## API 정보
- **End Point**: `/common-api/v1/calculate/tx-result-amount/{serviceTxNo}`
- **Path Parameters**: serviceTxNo (주문번호)
- **Request Parameters**: txDate, amountType, billingCancelTradeNo, billingServiceCancelNo
- **Response**: 정산예정금액 계산 결과

## 테스트 케이스

### 테스트 케이스 1: 기본 결제 주문 정산예정금액 계산
**설명**: 할인이 없는 일반 주문에 대한 정산예정금액 계산 검증
- **입력 데이터**:
  - serviceTxNo: 유효한 주문번호
  - txDate: 현재 날짜
  - amountType: "PLUS" (결제)
- **예상 결과**:
  - 응답 코드: 200 OK
  - 정산예정금액이 정확히 계산되어 반환됨
  - 주문금액과 가게배달팁이 정산기준금액에 반영됨

### 테스트 케이스 2: 배민 부담 가게배달팁이 있는 주문 정산예정금액 계산
**설명**: HVA 배달팁 할인이 적용된 주문에 대한 정산예정금액 계산 검증
- **입력 데이터**:
  - serviceTxNo: 배민 부담 가게배달팁이 포함된 주문번호
  - txDate: 현재 날짜
  - amountType: "PLUS" (결제)
- **예상 결과**:
  - 응답 코드: 200 OK
  - 정산예정금액에 배민 부담 가게배달팁이 정산기준조정금액으로 반영됨
  - 정산기준금액이 주문금액 + 배민 부담 가게배달팁으로 계산됨

### 테스트 케이스 3: 주문 취소 시 정산예정금액 계산
**설명**: 전체 취소된 주문에 대한 정산예정금액 계산 검증
- **입력 데이터**:
  - serviceTxNo: 취소된 주문번호
  - txDate: 취소 날짜
  - amountType: "MINUS" (취소)
- **예상 결과**:
  - 응답 코드: 200 OK
  - 정산예정금액이 음수로 반환됨 (원래 정산예정금액의 마이너스 값)
  - 취소된 주문의 모든 금액이 정확히 반영됨

### 테스트 케이스 4: 부분 취소 시 정산예정금액 계산
**설명**: 부분 취소된 주문에 대한 정산예정금액 계산 검증
- **입력 데이터**:
  - serviceTxNo: 부분 취소된 주문번호
  - txDate: 부분 취소 날짜
  - amountType: "PARTIAL_MINUS" (부분 취소)
  - billingCancelTradeNo: 유효한 부분취소번호
  - billingServiceCancelNo: 유효한 빌링취소번호
- **예상 결과**:
  - 응답 코드: 200 OK
  - 부분 취소된 금액에 대한 정산예정금액이 정확히 계산됨
  - 취소 비율에 따라 정산예정금액이 비례하여 계산됨

### 테스트 케이스 5: 사장님부담 쿠폰이 적용된 주문 정산예정금액 계산
**설명**: 사장님부담 쿠폰이 적용된 주문에 대한 정산예정금액 계산 검증
- **입력 데이터**:
  - serviceTxNo: 사장님부담 쿠폰이 적용된 주문번호
  - txDate: 현재 날짜
  - amountType: "PLUS" (결제)
- **예상 결과**:
  - 응답 코드: 200 OK
  - 정산기준조정금액에 사장님부담 쿠폰 금액이 반영됨
  - 정산예정금액이 정확히 계산됨

### 테스트 케이스 6: 메뉴할인지원이 적용된 주문 정산예정금액 계산
**설명**: 메뉴할인지원이 적용된 주문에 대한 정산예정금액 계산 검증
- **입력 데이터**:
  - serviceTxNo: 메뉴할인지원이 적용된 주문번호
  - txDate: 현재 날짜
  - amountType: "PLUS" (결제)
- **예상 결과**:
  - 응답 코드: 200 OK
  - 정산기준조정금액에 메뉴할인지원 금액이 반영됨
  - 정산예정금액이 정확히 계산됨

### 테스트 케이스 7: 복합 할인이 적용된 주문 정산예정금액 계산
**설명**: 여러 종류의 할인(배민 부담 가게배달팁, 사장님부담 쿠폰, 메뉴할인지원)이 모두 적용된 주문에 대한 정산예정금액 계산 검증
- **입력 데이터**:
  - serviceTxNo: 복합 할인이 적용된 주문번호
  - txDate: 현재 날짜
  - amountType: "PLUS" (결제)
- **예상 결과**:
  - 응답 코드: 200 OK
  - 모든 할인 항목이 정산기준조정금액에 정확히 반영됨
  - 정산예정금액이 정확히 계산됨

### 테스트 케이스 8: 잘못된 주문번호로 정산예정금액 계산 요청
**설명**: 존재하지 않는 주문번호로 정산예정금액 계산 요청 시 오류 처리 검증
- **입력 데이터**:
  - serviceTxNo: 존재하지 않는 주문번호
  - txDate: 현재 날짜
  - amountType: "PLUS" (결제)
- **예상 결과**:
  - 적절한 오류 응답 코드 반환
  - 오류 메시지에 주문번호가 유효하지 않다는 내용 포함

### 테스트 케이스 9: 필수 파라미터 누락 시 정산예정금액 계산 요청
**설명**: 필수 파라미터(txDate, amountType)를 누락하고 정산예정금액 계산 요청 시 오류 처리 검증
- **입력 데이터**:
  - serviceTxNo: 유효한 주문번호
  - txDate: 누락
  - amountType: 누락
- **예상 결과**:
  - 적절한 오류 응답 코드 반환
  - 오류 메시지에 필수 파라미터가 누락되었다는 내용 포함

### 테스트 케이스 10: 부분 취소 요청 시 필수 파라미터 누락
**설명**: 부분 취소 요청 시 필수 파라미터(billingCancelTradeNo, billingServiceCancelNo)를 누락하고 정산예정금액 계산 요청 시 오류 처리 검증
- **입력 데이터**:
  - serviceTxNo: 유효한 주문번호
  - txDate: 현재 날짜
  - amountType: "PARTIAL_MINUS" (부분 취소)
  - billingCancelTradeNo: 누락
  - billingServiceCancelNo: 누락
- **예상 결과**:
  - 적절한 오류 응답 코드 반환
  - 오류 메시지에 부분 취소 시 필요한 파라미터가 누락되었다는 내용 포함

이 테스트 케이스들은 정산예정금액 계산API의 다양한 시나리오를 검증하며, 특히 배민 부담 가게배달팁(HVA 배달팁 할인)이 정산예정금액 계산에 미치는 영향을 중점적으로 테스트합니다. 각 테스트 케이스는 중복되지 않도록 설계되었으며, API의 기능과 오류 처리를 포괄적으로 검증합니다.